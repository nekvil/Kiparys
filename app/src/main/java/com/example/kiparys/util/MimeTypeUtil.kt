package com.example.kiparys.util

object MimeTypeUtil {

    private val mimeTypeToExtensionMap = mapOf(
        "audio/aac" to "aac",
        "application/x-abiword" to "abw",
        "image/apng" to "apng",
        "application/x-freearc" to "arc",
        "image/avif" to "avif",
        "video/x-msvideo" to "avi",
        "application/vnd.amazon.ebook" to "azw",
        "application/octet-stream" to "bin",
        "image/bmp" to "bmp",
        "application/x-bzip" to "bz",
        "application/x-bzip2" to "bz2",
        "application/x-cdf" to "cda",
        "application/x-csh" to "csh",
        "text/css" to "css",
        "text/csv" to "csv",
        "application/msword" to "doc",
        "application/vnd.openxmlformats-officedocument.wordprocessingml.document" to "docx",
        "application/vnd.ms-fontobject" to "eot",
        "application/epub+zip" to "epub",
        "application/gzip" to "gz",
        "image/gif" to "gif",
        "text/html" to "html",
        "image/vnd.microsoft.icon" to "ico",
        "text/calendar" to "ics",
        "application/java-archive" to "jar",
        "image/jpeg" to "jpg",
        "application/json" to "json",
        "application/ld+json" to "jsonld",
        "audio/midi" to "mid",
        "audio/x-midi" to "midi",
        "video/mp4" to "mp4",
        "audio/mpeg" to "mp3",
        "video/mpeg" to "mpeg",
        "application/vnd.apple.installer+xml" to "mpkg",
        "application/vnd.oasis.opendocument.presentation" to "odp",
        "application/vnd.oasis.opendocument.spreadsheet" to "ods",
        "application/vnd.oasis.opendocument.text" to "odt",
        "audio/ogg" to "oga",
        "video/ogg" to "ogv",
        "application/ogg" to "ogx",
        "audio/ogg" to "opus",
        "font/otf" to "otf",
        "image/png" to "png",
        "application/pdf" to "pdf",
        "application/vnd.ms-powerpoint" to "ppt",
        "application/vnd.openxmlformats-officedocument.presentationml.presentation" to "pptx",
        "application/vnd.rar" to "rar",
        "application/rtf" to "rtf",
        "application/x-sh" to "sh",
        "image/svg+xml" to "svg",
        "application/x-tar" to "tar",
        "image/tiff" to "tiff",
        "video/mp2t" to "ts",
        "font/ttf" to "ttf",
        "text/plain" to "txt",
        "application/vnd.visio" to "vsd",
        "audio/wav" to "wav",
        "audio/webm" to "weba",
        "video/webm" to "webm",
        "image/webp" to "webp",
        "font/woff" to "woff",
        "font/woff2" to "woff2",
        "application/xhtml+xml" to "xhtml",
        "application/vnd.ms-excel" to "xls",
        "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet" to "xlsx",
        "application/xml" to "xml",
        "application/vnd.mozilla.xul+xml" to "xul",
        "application/zip" to "zip",
        "video/3gpp" to "3gp",
        "audio/3gpp" to "3gp",
        "video/3gpp2" to "3g2",
        "audio/3gpp2" to "3g2",
        "application/x-7z-compressed" to "7z",
        "application/x-python-code" to "py",
        "text/x-java-source" to "java",
        "application/javascript" to "js",
        "application/x-typescript" to "ts",
        "text/x-csrc" to "c",
        "text/x-c++src" to "cpp",
        "text/x-csharp" to "cs",
        "text/x-go" to "go",
        "application/x-ruby" to "rb",
        "application/x-httpd-php" to "php",
        "text/x-kotlin" to "kt",
        "text/x-swift" to "swift",
        "text/x-dart" to "dart",
        "text/x-rsrc" to "r",
        "text/x-scala" to "scala",
        "application/sql" to "sql"
    )

    fun getExtensionFromMimeType(mimeType: String): String? {
        return mimeTypeToExtensionMap[mimeType]
    }
}
